[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.description }}"
authors = ["{{ cookiecutter.author_name }} <{{ cookiecutter.email }}>"]
license = "{{ cookiecutter.open_source_license }}"

[tool.poetry.dependencies]
python = "^{{ cookiecutter.python_version }}"
django = "==3.2.5"
djangorestframework = "==3.12.4"
django-cors-headers = "3.7.0"
django-extensions = "==3.1.3"
dj-database-url = "==0.5.0"
werkzeug = "==2.0.1"
python-decouple = "==3.4"
Unipath = "*"
psycopg2-binary = "==2.9.1"
gunicorn = "==20.1.0"
idna_ssl = "1.1.0"
requests = "==2.25.1"
pytz = "==2021.1"
drf-yasg = "1.20.0"
django-filter = "==2.4.0"
{% if cookiecutter.use_nameko == "y" -%}
nameko = "==2.13.0"
nameko-sentry = "^1.0.0"
{%- endif %}
{% if cookiecutter.use_graphql == "y" -%}
graphene-django = "==2.15.0"
graphene-federation = "==0.1.0"
graphene-sentry = "^0.4.0"
{%- endif %}
{% if cookiecutter.use_scheduler == "y" -%}
schedule = "^1.1.0"
{%- endif %}

[tool.poetry.dev-dependencies]
tox = "^3.23.1"
black = "^21.6b0"
flake8 = "^3.9.2"
flake8-isort = "^4.0.0"
coverage = "==5.5"
model-bakery = "==1.3.2"
ipython = "==7.25.0"
pre-commit = "2.13.0"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.black]
line-length = 79
skip-string-normalization = true
target-version = ['py38']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | migrations
)
'''
